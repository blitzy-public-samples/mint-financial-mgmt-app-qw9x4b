apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mint-replica-postgresql
  labels:
    app: mint-replica
    tier: database
spec:
  serviceName: mint-replica-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: mint-replica
      tier: database
  template:
    metadata:
      labels:
        app: mint-replica
        tier: database
    spec:
      containers:
      - name: postgresql
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: mint_replica
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: mint-replica-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mint-replica-secrets
              key: postgres-password
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi

# Human tasks:
# - Review and adjust resource limits based on actual database requirements
# - Create and configure the mint-replica-secrets Secret in Kubernetes with postgres-user and postgres-password
# - Review and adjust the storage size (10Gi) based on expected data growth
# - Implement regular database backups and test restore procedures
# - Configure appropriate network policies to restrict access to the database